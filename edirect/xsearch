#!/bin/bash

# ===========================================================================
#
#                            PUBLIC DOMAIN NOTICE
#            National Center for Biotechnology Information (NCBI)
#
#  This software/database is a "United States Government Work" under the
#  terms of the United States Copyright Act.  It was written as part of
#  the author's official duties as a United States Government employee and
#  thus cannot be copyrighted.  This software/database is freely available
#  to the public for use. The National Library of Medicine and the U.S.
#  Government do not place any restriction on its use or reproduction.
#  We would, however, appreciate having the NCBI and the author cited in
#  any work or product based on this material.
#
#  Although all reasonable efforts have been taken to ensure the accuracy
#  and reliability of the software and data, the NLM and the U.S.
#  Government do not and cannot warrant the performance or results that
#  may be obtained by using this software or data. The NLM and the U.S.
#  Government disclaim all warranties, express or implied, including
#  warranties of performance, merchantability or fitness for any particular
#  purpose.
#
# ===========================================================================
#
# File Name:  xsearch
#
# Author:  Jonathan Kans
#
# Version Creation Date:   01/11/2025
#
# ==========================================================================

pth=$( dirname "$0" )

case "$pth" in
  /* )
    ;; # already absolute
  *  )
    pth=$(cd "$pth" && pwd)
    ;;
esac

case ":$PATH:" in
  *:"$pth":* )
    ;;
  * )
    PATH="$PATH:$pth"
    export PATH
    ;;
esac

dbase=""
target=""
debug=false
raw=false

while [ $# -gt 0 ]
do
  case "$1" in
    -version )
      version=$( einfo -version )
      echo "$version"
      exit 0
      ;;
    -h | -help | --help | help )
      version=$( einfo -version )
      echo "xsearch $version"
      echo ""
      echo "USAGE: xsearch"
      echo "       -query | -match | -exact | -title"
      echo "       query arguments"
      echo ""
      exit 0
      ;;
    * )
      break
      ;;
  esac
done

while [ $# -gt 0 ]
do
  case "$1" in
    -raw )
      raw=true
      shift
      ;;
    -debug )
      debug=true
      shift
      ;;
    -path | -master )
      # ignore for backward compatibility, but now requiring environment variable for path
      # target=$2
      shift
      shift
      ;;
    -db )
      dbase=$2
      shift
      shift
      ;;
    * )
      break
      ;;
  esac
done

if [ -z "$dbase" ]
then
  # default
  dbase="pubmed"
fi

# get local master and working volumes from database
ev=$( rchive -local "$dbase" )
if [ -n "$ev" ]
then
  # only care about master volume and its Postings subfolder
  target="${ev%:*}"
fi

if [ -z "$target" ]
then
  echo "ERROR: Must supply path to local data by setting EDIRECT_LOCAL_MASTER environment variable" >&2
  exit 1
fi

osname=$( uname -s | sed -e 's/_NT-.*$/_NT/; s/^MINGW[0-9]*/CYGWIN/' )
if [ "$osname" = "CYGWIN_NT" -a -x /bin/cygpath ]
then
  target=$( cygpath -w "$target" )
fi

# remove trailing slash
target=${target%/}

if [ ! -d "$target" ]
then
  echo "ERROR: Local archive ${target} is not mounted" >&2
  exit 1
fi

target=$( echo "${target}/Postings")

if [ ! -d "$target" ]
then
  echo "ERROR: Postings directory ${target} is not present" >&2
  exit 1
fi

val="-query"
if [ $# -gt 0 ]
then
  val="$1"
  shift
fi

case "$val" in
  -query | -phrase | -search )
    if [ "$raw" = true ]
    then
      rchive -db "$dbase" -query "$*"
    else
      flt=""
      num="0"
      uids=$( rchive -db "$dbase" -query "$*" )
      if [ -n "$uids" ]
      then
        flt=$( echo "$uids" | sed -e 's/^/  <Id>/' -e 's/$/<\/Id>/' )
        num=$( echo "$uids" | wc -l | tr -d ' ' )
        echo "<ENTREZ_DIRECT>"
        echo "  <Source>Local</Source>"
        if [ -n "$dbase" ]
        then
          echo "  <Db>${dbase}</Db>"
        fi
        if [ -n "$num" ]
        then
          echo "  <Count>${num}</Count>"
        fi
        if [ -n "$flt" ]
        then
          echo "$flt"
        fi
        echo "</ENTREZ_DIRECT>"
      fi
    fi
    ;;
  -match | -partial )
    rchive -db "$dbase" -match "$*"
    ;;
  -exact )
    rchive -db "$dbase" -exact "$*"
    ;;
  -title )
    rchive -db "$dbase" -title "$*"
    ;;
  -* )
    exec >&2
    echo "ERROR: Unrecognized option $val" >&2
    exit 1
    ;;
  * )
    exec >&2
    echo "ERROR: Unrecognized argument $val" >&2
    exit 1
    ;;
esac

exit 0
